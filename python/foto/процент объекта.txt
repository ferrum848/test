import re
import string
import shelve
import webbrowser, sys, requests, bs4, openpyxl, pprint, PyPDF2, docx, datetime, subprocess
from matplotlib import pyplot as plt
import numpy as np
import cv2, random, os, time
from xml.etree.ElementTree import ElementTree

def rect_intersection(spisok):
    intersection = 0
    if len(spisok) > 1:
        while True:
            r1_left = spisok[0][0]
            r1_top = spisok[0][1]
            r1_right = spisok[0][2]
            r1_bottom = spisok[0][3]
            for i in range(1, len(spisok)):
                r2_left = spisok[i][0]
                r2_top = spisok[i][1]
                r2_right = spisok[i][2]
                r2_bottom = spisok[i][3]
                left = max(r1_left, r2_left)
                right = min(r1_right, r2_right)
                bottom = min(r1_bottom, r2_bottom)
                top = max(r1_top, r2_top)
                if left < right and bottom > top:
                    intersection += (right - left) * (bottom - top)
            if len(spisok) == 2:
                break
            else:
                spisok = spisok[1:]
        return intersection
    else:
        return 0


def squre_of_objects(spisok):
    squre = 0
    for coord in spisok:
        squre += (coord[2] - coord[0]) * (coord[3] - coord[1])
    return squre


start = time.time()
q = 5011  # q - чтобы колбасил нужное мне число фоток из папки, а не все 5011 ))
for file in os.listdir("c:/Games/anaconda/work/voc/Annotations/"):
    if q == 0:
        break
    q -= 1

    tree = ElementTree()
    tree.parse("c:/Games/anaconda/work/voc/Annotations/" + file)
    root = tree.getroot()
    result = []
    for i in root.iter('object'):
        for j in i:
            if j.tag == 'bndbox':
                result.append([i[0].text, int(j[0].text), int(j[1].text), int(j[2].text), int(j[3].text)])

    image = cv2.imread('c:/Games/anaconda/work/voc/JPEGImages/' + file[:-3] + 'jpg')
    square_of_foto = image.shape[0] * image.shape[1]
    spl = cv2.split(image)
    for i in result:
        cv2.rectangle(spl[1], (i[1], i[2]), (i[3], i[4]), (255, 0, 0), 2)
    image = cv2.merge((spl))
    #cv2.imshow('1', image)
    #cv2.waitKey(0)
    #cv2.imwrite('{}.jpg'.format(q), image)

    slovar = {}
    for i in result:
        if not i[0] in slovar:
            slovar[i[0]] = [i[1:]]
        else:
            slovar[i[0]].append(i[1:])
    print(slovar)

    for i, j in slovar.items():
        square_rest = squre_of_objects(j) - rect_intersection(j)
        '''
        fon = np.zeros((image.shape[0], image.shape[1]), dtype=np.uint8)
        for cor in j:
            cv2.rectangle(fon, (cor[0], cor[1]), (cor[2], cor[3]), (255), -1)
        square_rest = cv2.countNonZero(fon)
        '''
        print('square of {} = {}% in image({})'.format(i, round((square_rest / square_of_foto) * 100), file[:-3] + 'jpg'))
        #cv2.imshow('2', fon)
        #cv2.waitKey(0)
print(time.time() - start)

