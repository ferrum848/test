#obj_classes = {'obj0': (223, 37, 205), 'obj1': (36, 126, 121), 'obj2': (182, 192, 132), 'obj3': (212, 138, 34), 'obj4': (185, 95, 226), 'obj5': (6, 131, 77), 'obj6': (201, 219, 63), 'obj7': (134, 15, 200), 'obj8': (120, 27, 231), 'obj9': (20, 31, 99), 'obj10': (177, 39, 170), 'obj11': (215, 73, 70), 'obj12': (225, 32, 14), 'obj13': (172, 81, 59), 'obj14': (140, 40, 120), 'obj15': (211, 243, 189), 'obj16': (110, 233, 65), 'obj17': (131, 15, 50), 'obj18': (209, 191, 247), 'obj19': (234, 45, 68), 'obj20': (97, 227, 178), 'obj21': (92, 162, 90), 'obj22': (23, 233, 170), 'obj23': (161, 42, 73), 'obj24': (15, 39, 203), 'obj25': (22, 117, 17), 'obj26': (240, 254, 141), 'obj27': (95, 110, 209), 'obj28': (246, 58, 173), 'obj29': (99, 140, 223), 'obj30': (237, 118, 89), 'obj31': (34, 150, 241), 'obj32': (140, 56, 83), 'obj33': (56, 211, 167), 'obj34': (145, 80, 254), 'obj35': (77, 3, 43), 'obj36': (86, 135, 197), 'obj37': (135, 24, 94), 'obj38': (192, 230, 173), 'obj39': (166, 174, 133), 'obj40': (223, 221, 225), 'obj41': (106, 229, 162), 'obj42': (188, 219, 150), 'obj43': (201, 250, 26), 'obj44': (86, 40, 40), 'obj45': (129, 68, 26), 'obj46': (148, 108, 76), 'obj47': (15, 164, 218), 'obj48': (29, 179, 167), 'obj49': (216, 201, 77), 'obj50': (127, 216, 253), 'obj51': (216, 250, 253), 'obj52': (28, 219, 202), 'obj53': (7, 93, 58), 'obj54': (83, 155, 33), 'obj55': (240, 33, 204), 'obj56': (156, 101, 173), 'obj57': (3, 116, 35), 'obj58': (166, 167, 181), 'obj59': (49, 97, 130), 'obj60': (17, 84, 217), 'obj61': (105, 88, 46), 'obj62': (78, 39, 103), 'obj63': (246, 148, 133), 'obj64': (74, 86, 134), 'obj65': (131, 23, 27), 'obj66': (105, 107, 13), 'obj67': (171, 199, 227), 'obj68': (167, 66, 74), 'obj69': (111, 194, 40), 'obj70': (127, 46, 94), 'obj71': (193, 222, 122), 'obj72': (208, 52, 92), 'obj73': (198, 71, 120), 'obj74': (84, 76, 143), 'obj75': (97, 90, 153), 'obj76': (1, 77, 59), 'obj77': (149, 13, 122), 'obj78': (28, 92, 29), 'obj79': (103, 202, 100), 'obj80': (200, 75, 254), 'obj81': (164, 80, 53), 'obj82': (9, 104, 92), 'obj83': (61, 43, 4), 'obj84': (143, 112, 153), 'obj85': (101, 49, 198), 'obj86': (82, 103, 57), 'obj87': (243, 230, 135), 'obj88': (133, 169, 4), 'obj89': (204, 63, 18), 'obj90': (136, 188, 165), 'obj91': (98, 151, 100), 'obj92': (159, 121, 32), 'obj93': (192, 141, 153), 'obj94': (51, 249, 55), 'obj95': (128, 171, 87), 'obj96': (202, 239, 165), 'obj97': (75, 110, 254), 'obj98': (23, 19, 90), 'obj99': (204, 78, 119), 'obj100': (102, 94, 163), 'obj101': (44, 150, 7), 'obj102': (110, 191, 99), 'obj103': (210, 43, 191), 'obj104': (173, 206, 254), 'obj105': (162, 183, 201), 'obj106': (192, 222, 185), 'obj107': (83, 50, 82), 'obj108': (122, 164, 68), 'obj109': (14, 43, 11), 'obj110': (244, 254, 172), 'obj111': (25, 150, 176), 'obj112': (23, 10, 75), 'obj113': (188, 112, 46), 'obj114': (60, 67, 146), 'obj115': (157, 5, 110), 'obj116': (165, 73, 235), 'obj117': (17, 25, 170), 'obj118': (26, 36, 91), 'obj119': (42, 132, 139), 'obj120': (21, 242, 123), 'obj121': (222, 182, 172), 'obj122': (76, 138, 96), 'obj123': (1, 9, 16), 'obj124': (151, 28, 210), 'obj125': (250, 62, 101), 'obj126': (110, 145, 8), 'obj127': (214, 122, 17), 'obj128': (21, 10, 232), 'obj129': (36, 168, 164), 'obj130': (54, 123, 178), 'obj131': (66, 24, 169), 'obj132': (125, 27, 57), 'obj133': (202, 110, 187), 'obj134': (211, 28, 107)}
#obj_regions = {1: 'obj1', 2: 'obj2', 3: 'obj3', 4: 'obj4', 5: 'obj5', 6: 'obj6', 7: 'obj7', 8: 'obj8', 9: 'obj9', 10: 'obj10', 11: 'obj11', 12: 'obj12', 13: 'obj13', 14: 'obj14', 15: 'obj15', 16: 'obj16', 17: 'obj17', 18: 'obj18', 19: 'obj19', 20: 'obj20', 21: 'obj21', 22: 'obj22', 23: 'obj23', 24: 'obj24', 25: 'obj25', 26: 'obj26', 27: 'obj27', 28: 'obj28', 29: 'obj29', 30: 'obj30', 31: 'obj31', 32: 'obj32', 33: 'obj33', 34: 'obj34', 35: 'obj35', 36: 'obj36', 37: 'obj37', 38: 'obj38', 39: 'obj39', 40: 'obj40', 41: 'obj41', 42: 'obj42', 43: 'obj43', 44: 'obj44', 45: 'obj45', 46: 'obj46', 47: 'obj47', 48: 'obj48', 49: 'obj49', 50: 'obj50', 51: 'obj51', 52: 'obj52', 53: 'obj53', 54: 'obj54', 55: 'obj55', 56: 'obj56', 57: 'obj57', 58: 'obj58', 59: 'obj59', 60: 'obj60', 61: 'obj61', 62: 'obj62', 63: 'obj63', 64: 'obj64', 65: 'obj65', 66: 'obj66', 67: 'obj67', 68: 'obj68', 69: 'obj69', 70: 'obj70', 71: 'obj71', 72: 'obj72', 73: 'obj73', 74: 'obj74', 75: 'obj75', 76: 'obj76', 77: 'obj77', 78: 'obj78', 79: 'obj79', 80: 'obj80', 81: 'obj81', 82: 'obj82', 83: 'obj83', 84: 'obj84', 85: 'obj85', 86: 'obj86', 87: 'obj87', 88: 'obj88', 89: 'obj89', 90: 'obj90', 91: 'obj91', 92: 'obj92', 93: 'obj93', 94: 'obj94', 95: 'obj95', 96: 'obj96', 97: 'obj97', 98: 'obj98', 99: 'obj99', 100: 'obj100', 101: 'obj101', 102: 'obj102', 103: 'obj103', 104: 'obj104', 105: 'obj105', 106: 'obj106', 107: 'obj107', 108: 'obj108', 109: 'obj109', 110: 'obj110', 111: 'obj111', 112: 'obj112', 113: 'obj113', 114: 'obj114', 115: 'obj115', 116: 'obj116', 117: 'obj117', 118: 'obj118', 119: 'obj119', 120: 'obj120', 121: 'obj121', 122: 'obj122', 123: 'obj123', 124: 'obj124', 125: 'obj125', 126: 'obj126', 127: 'obj127', 128: 'obj128', 129: 'obj129', 130: 'obj130', 131: 'obj131', 132: 'obj132', 133: 'obj133', 134: 'obj134', 135: 'obj0'}
'''


import numpy as np
import cv2, random, os, time, json
from xml.etree.ElementTree import ElementTree
import pandas as pd, json, zlib, base64, io
from PIL import Image


def base64_2_mask(s):
    z = zlib.decompress(base64.b64decode(s))
    n = np.fromstring(z, np.uint8)
    mask = cv2.imdecode(n, cv2.IMREAD_UNCHANGED)[:, :, 3].astype(bool)
    return mask

def color2code(color):
    return '#%02x%02x%02x' % (int(color[0]), int(color[1]), int(color[2]))

def json_dump(obj, fpath):
    with open(fpath, 'w') as fp:
        json.dump(obj, fp)

def mask_2_base64(mask):
    img_pil = Image.fromarray(np.array(mask, dtype=np.uint8))
    img_pil.putpalette([0,0,0,255,255,255])
    bytes_io = io.BytesIO()
    img_pil.save(bytes_io, format='PNG', transparency=0, optimize=0)
    bytes = bytes_io.getvalue()
    return base64.b64encode(zlib.compress(bytes)).decode('utf-8')

qqq = "eJzrDPBz5+WS4mJgYOD19HAJAtI7gPggIzOQdLvwohdIsQX4hLgC6f///y+9Of8ukMVYEuQXzODw7EYakPPS08UxpGLO26uGfM0GPKwB7jyylkzuLy/eWvxUQ0ZR2bkl2iPowEd5r4mrxKprJtnfcGzskEr7FjL1cUzDcinx9MATO9nPMX+YsvTnlKW/jL3LzcxB4L/n/pUyjewP5CxeysGodua/q34k7Ltt/Tn23rwTjxvrLGdaP7jFal7NvefnJO36DU9kP1Q9evJVdMreqqJvWa5Hn67rPh1eW8l9h1F8s+69mieP7++ovrzd3VJnn+WpeV/afp+KNp13LV3e7N5Kw9XhvS5ZzgJxZQ9bp7+PKsqb8DHVTNK/UjLUZulNkXnTFh45z2v5jzHHeSpT6XYlVaCnGTxd/VzWOSU0AQBTCYm+"
asd = base64_2_mask(qqq)
'''
# make meta.json
classes = []
for title, color in our_class.items():
    temp = {'title': title, 'shape': 'bitmap', 'color': color2code(color)}
    classes.append(temp)
meta = {'classes': classes, 'tags_images': [], "tags_objects": []}
json_dump(meta, 'c:/Games/anaconda/work/super/3/meta.json')
'''

#=============================================================================================
our_class = {'sky' : (255, 255, 0),
             'tree':(0, 128, 0),
             'road':(0, 0, 255),
             'grass':(128, 255, 0),
             'water':(255, 0, 0),
             'building':(0, 255, 255),
             'mountain':(211, 211, 211),
             'foreground_object':(255, 0, 255),
             'unknown':(0, 0, 0)}


our_regions = {8: 'sky',
             1: 'tree',
             2: 'road',
             3: 'grass',
             4: 'water',
             5: 'building',
             6: 'mountain',
             7: 'foreground_object',
             -1: 'unknown'}



'''
for object in os.listdir('c:/Games/anaconda/work/super/3/images'):
    name = object[:7]

    image = cv2.imread('c:/Games/anaconda/work/super/3/images/' + name + '.jpg')
    #cv2.imshow('1', image)
    #cv2.waitKey(0)

    mask = []
    with open('c:/Games/anaconda/work/super/3/labels/' + name + '.layers.txt') as file:
        for line in file:
            line = line.split('\n')[0]
            line = line.split(' ')
            mask.append(line)
    mask = np.array(mask, int)

    foto_objects = []
    json_for_image = {'tags': [],
                      'description': '',
                      'objects': foto_objects,
                      'size': {
                          'width': image.shape[1],
                          'height': image.shape[0]
                      }}
    mask = np.where(mask != 0, mask, 8)

    for obj in np.unique(mask):
        classTitle = our_regions[obj]
        mask_bool = np.where(mask == obj, mask, False)
        mask_bool = mask_bool.astype(np.bool)
        data = mask_2_base64(mask_bool)
        temp = {"bitmap":
                    {"origin": [0, 0],
                     "data": data},
                     "type": "bitmap",
                     "classTitle": classTitle,
                     "description": "",
                     "tags": [],
                     "points": {"interior": [], "exterior": []}}
        foto_objects.append(temp)
    json_dump(json_for_image, 'c:/Games/anaconda/work/super/3/ann/' + name + '.json')
#=============================================